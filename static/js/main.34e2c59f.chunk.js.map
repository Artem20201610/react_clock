{"version":3,"sources":["Clock.js","ClockControl.js","App.js","index.js"],"names":["Clock","state","currentTime","Date","toLocaleTimeString","this","timerId","setInterval","date","setState","console","log","prevProps","clockName","props","clearInterval","className","React","Component","ClockControl","action","text","type","onClick","App","isClockVisible","hideClock","showClock","changeName","name","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,aAAa,IAAIC,MAAOC,sBAF5B,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,IAAMC,EAAO,IAAIL,KAEjB,EAAKM,SAAS,CAAEP,YAAaM,EAAKJ,uBAElCM,QAAQC,IAAIH,EAAKJ,wBAChB,OAZP,gCAeE,SAAmBQ,GACjB,IAAQC,EAAcR,KAAKS,MAAnBD,UAEJA,IAAcD,EAAUC,WAE1BH,QAAQC,IAAI,wCACPC,EAAUC,UADH,eACmBA,MArBrC,kCAyBE,WACEE,cAAcV,KAAKC,WA1BvB,oBA6BE,WACE,OACE,yBAAKU,UAAU,SACb,2CACA,2CAEG,IACAX,KAAKJ,MAAMC,kBApCtB,GAA2Be,IAAMC,WCApBC,G,MAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAX,OAC1B,4BACEC,KAAK,SACLC,QAASH,GAERC,KC6CUG,E,4MA9CbvB,MAAQ,CACNwB,gBAAgB,EAChBZ,UAAW,G,EAGba,UAAY,WACV,EAAKjB,SAAS,CACZgB,gBAAgB,K,EAIpBE,UAAY,WACV,EAAKlB,SAAS,CACZgB,gBAAgB,K,EAIpBG,WAAa,WACX,IAAMC,EAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,UAE7B,EAAKvB,SAAS,CAAEI,UAAWgB,K,4CAG7B,WACE,OACE,yBAAKb,UAAU,OACZX,KAAKJ,MAAMwB,eACR,kBAAC,EAAUpB,KAAKJ,OAChB,kBACJ,kBAAC,EAAD,CACEoB,KAAK,aACLD,OAAQf,KAAKsB,YAEf,kBAAC,EAAD,CACEN,KAAK,aACLD,OAAQf,KAAKqB,YAEf,kBAAC,EAAD,CACEL,KAAK,kBACLD,OAAQf,KAAKuB,kB,GAxCLX,IAAMC,WCFxBe,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.34e2c59f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    currentTime: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const date = new Date();\n\n      this.setState({ currentTime: date.toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { clockName } = this.props;\n\n    if (clockName !== prevProps.clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from `\n      + `${prevProps.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <h1>React Clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.currentTime}\n        </p>\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  clockName: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ClockControl = ({ action, text }) => (\n  <button\n    type=\"button\"\n    onClick={action}\n  >\n    {text}\n  </button>\n);\n\nClockControl.propTypes = {\n  text: PropTypes.string.isRequired,\n  action: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './Clock';\n\nimport './App.scss';\nimport { ClockControl } from './ClockControl';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  changeName = () => {\n    const name = Math.floor(Math.random() * 1000);\n\n    this.setState({ clockName: name });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.isClockVisible\n          ? <Clock {...this.state} />\n          : 'Clock is hidden'}\n        <ClockControl\n          text=\"Show Clock\"\n          action={this.showClock}\n        />\n        <ClockControl\n          text=\"Hide Clock\"\n          action={this.hideClock}\n        />\n        <ClockControl\n          text=\"Set random name\"\n          action={this.changeName}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}